[["introduction.html", "Using the pdphmc package 1 Introduction 1.1 Getting pdphmc", " Using the pdphmc package Tore Selland Kleppe 2021-02-19 1 Introduction This bookdown aims to document the usage of the package pdphmc. The package implements a class of piecewise deterministc Markov processes (PDMP) where the deterministic dynamics are those of a Hamiltonian dynamic system. The actual PDMP algorithm is described in detail at https://arxiv.org/abs/2005.01285 and is not repeated in much detail here. Rather this bookdown describes how to use the software for analyzing your own models how to choose suitable tuning parameters influencing the behaviour of the sampling algorithm 1.1 Getting pdphmc So far pdphmc is only available on github. Before installing pdphmc, make sure that you have a working installation of rstan (see RStan getting started) and the you are running R version 4.0 or greater. The software is routinely tested on mac, linux and windows (using the compiler that ships with rtools). pdphmc is most easily installed using (requires the devtools package) #install.packages(&quot;devtools&quot;) devtools::install_github(&quot;https://github.com/torekleppe/pdphmc&quot;) "],["usage.html", "2 Usage 2.1 Building a model 2.2 Running a model 2.3 Handling output", " 2 Usage Postponing the definition of new models to Chapter 3, the typical workflow when using pdphmc consists of the following three steps: Building the model. Fitting the model to a given data set. Using output of the fitting process Throughout this chapter, we consider the very simple model \\(y_i \\sim N(\\mu,1),\\;i=1,\\dots,n\\) where \\(\\{y_i\\}_{i=1}^n\\) are observed, the single parameter \\(\\mu\\) has a flat prior, and we wish to draw samples from the posterior \\(p(\\mu|\\{y_i\\}_{i=1}^n)\\). (Okay, we know the posterior in closed form, \\(\\mu|\\{y_i\\}_{i=1}^n \\sim N(\\bar y,n^{-1}),\\; \\bar y = n^{-1}\\sum_{i=1}^n y_i\\), but for the sake of illustrationâ€¦) A model file for this simple model, where we are for some reason also interested in the quantity \\(\\mu^2\\) may be something like the following: INCLUDE_BLOCK{ // not used here } DATA_BLOCK{ DATA_VECTOR(y); // data to be passed from R } SETUP_BLOCK{ // not used here } VARIABLES_BLOCK{ PARAMETER_SCALAR(mu); // the parameter GENERATED_SCALAR(mu_squared); // a transformation of the parameter } MODEL_BLOCK{ // log-likelihood function target += stan::math::normal_lpdf(y,mu,1); // generated quantities mu_squared = mu*mu; } 2.1 Building a model Suppose the 2.2 Running a model ds 2.3 Handling output sd "],["the-model-file.html", "3 The model file 3.1 The blocks", " 3 The model file Below is 3.1 The blocks foo "]]
