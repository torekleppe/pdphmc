source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/par_table.R')
nms <- paste0("mu[",1:5,"]")
nms <- c(nms,paste0("sigma[",1:5,"]"))
nms <- c(nms,paste0("delta[",1:5,"]"))
nms <- c(nms,paste0("hts[",1:10,"]"))
nms <- c(nms,"nu")
tab <- cbind(round(m[nms,"mean"],2),round(m[nms,"sd"],3))
print(tab)
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/par_table.R')
mp
mp <- as.matrix(pdphmc::getMonitor(fit)[[1]])
print(mp[nmp,])
nms <- paste0("mu[",1:5,"]")
nmp <- paste0("mu_g(",0:4,")")
nms <- c(nms,paste0("sigma[",1:5,"]"))
nmp <- c(nmp,paste0("sigma_g(",0:4,")"))
nms <- c(nms,paste0("delta[",1:5,"]"))
nms <- c(nms,paste0("hts[",1:10,"]"))
nms <- c(nms,"nu")
print(mp[nmp,])
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/par_table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/par_table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
print(xtable::xtable(ess.table),file="table.tex")
table.ess
ess.table
print(round(ess.table,2))
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/par_table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/par_table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/par_table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
rownames(ess.table) <- rep("foo",22)
ess.table
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
tab.str <- "\\begin{table} \n \\begin{tabular}\n"
for(i in 1:dim(tab.str)[1]){
for(j in 1:5){
tab.str <- paste0(tab.str, "(",ess.tab[i,2*j-1],",",ess.tab[i,2*j],")")
if(j==5){
tab.str <- paste0(tab.str,"\\\\ \n")
} else {
tab.str <- paste0(tab.str," & ")
}
}
}
tab.str <- paste0(tab.str,"\\end{tabular} \n \\end{table} \n")
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
tab.str <- "\\begin{table} \n \\begin{tabular}\n"
for(i in 1:dim(ess.tab)[1]){
for(j in 1:5){
tab.str <- paste0(tab.str, "(",ess.table[i,2*j-1],",",ess.table[i,2*j],")")
if(j==5){
tab.str <- paste0(tab.str,"\\\\ \n")
} else {
tab.str <- paste0(tab.str," & ")
}
}
}
tab.str <- paste0(tab.str,"\\end{tabular} \n \\end{table} \n")
tab.str <- "\\begin{table} \n \\begin{tabular}\n"
for(i in 1:dim(ess.table)[1]){
for(j in 1:5){
tab.str <- paste0(tab.str, "(",ess.table[i,2*j-1],",",ess.table[i,2*j],")")
if(j==5){
tab.str <- paste0(tab.str,"\\\\ \n")
} else {
tab.str <- paste0(tab.str," & ")
}
}
}
tab.str <- paste0(tab.str,"\\end{tabular} \n \\end{table} \n")
tab.str
round(40000,2)
tab.str <- "\\begin{table} \n \\begin{tabular}\n"
for(i in 1:dim(ess.table)[1]){
for(j in 1:5){
tab.str <- paste0(tab.str, "(",round(ess.table[i,2*j-1],2),",",round(ess.table[i,2*j],2),")")
if(j==5){
tab.str <- paste0(tab.str,"\\\\ \n")
} else {
tab.str <- paste0(tab.str," & ")
}
}
}
tab.str <- paste0(tab.str,"\\end{tabular} \n \\end{table} \n")
tab.str
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/table.R')
5*2514
5*(5-1)/2
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/main.R')
setwd("~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments")
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/main.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/main.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
library(pdphmc)
fit.g@pointSamples
dim(fit.g@pointSamples)
dim(fit.g@intSamples)
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/main.R')
nevs
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/main.R')
nevs
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/main.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
?legend
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
setwd("~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility")
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/par_table.R')
tab
?xtable::xtable
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/par_table.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/realizedVolatility/par_table.R')
dim(tab)
print(xtable::xtable(tab,digits=c(1,2,3,2,2,3,2,2,3)),file="par_table.tex")
72127/(72127+14605)
4.28/0.84
6.63/1.52
0.2/sqrt(15000)
getMonitor(fit.p.al)
m <- monitor(fit.s.d)
m
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
setwd("~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments")
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
source('~/Dropbox/work/PDP_HMC/PDPHMCpaperCode/1d_experiments/plots.R')
r <- as.matrix(read.table("results.txt"))
r
dim(r)
r[,12]
r[1,12]/r[5,12]
library(rstan)
?stop
setwd("~/Dropbox/work/PDP_HMC/package")
library(pdphmc)
mdl <- build("test_case.cpp")
run(mdl)
?new
install.packages("roxygen2")
library(pdphmc)
library(pdphmc)
548-182
123456+12345678
setwd("~/Dropbox/work/PDP_HMC/package/pdphmc")
document()
devtool::document()
install.packages("devtools")
devtool::document()
devtools::document()
?devtool::document()
?devtool::document
?devtools::document
?doxygen2
devtools::document()
install.packages("doxygen2")
roxygen2::roxygenize()
roxygen2::roxygenize()
.Last.error.trace
library(pdphmc)
?pdphmc::run
?pdphmc::build
library(pdphmc)
?pdphmc::build
?pdphmc::run
devtools::document()
?pdphmc::run
?pdphmc::run
library(pdphmc)
library(pdphmc)
library(pdphmc)
library(pdphmc)
library(pdphmc)
setwd("~/Dropbox/work/PDP_HMC/package")
run(build(file=system.file('examples/test_case.cpp', package = "pdphmc")))
run(model=build(file=system.file('examples/test_case.cpp', package = "pdphmc")))
mdl<-build(file=system.file('examples/test_case.cpp', package = "pdphmc"))
library(pdphmc)
mdl<-build(file=system.file('examples/test_case.cpp', package = "pdphmc"))
mdl<-build(file=system.file('examples/test_case.cpp', package = "pdphmc"),work.folder = "./tmp")
setwd("~/Dropbox/work/PDP_HMC/tmp")
setwd("~/Dropbox/work/PDP_HMC/tmp")
file.copy(system.file('examples/test_case.cpp', package = "pdphmc"),".")
file.copy(system.file('examples/test_case.cpp', package = "pdphmc"),".")
mdl <- pdphmc::build("test_case.cpp")
fit <- pdphmc::run(mdl)
?file.copy
library(pdphmc)
library(pdphmc)
?file.remove()
file.remove(mdl@work.folder)
?list.dirs
file.remove(list.files(mdl@work.folder))
file.remove(list.files(mdl@work.folder,full.names = TRUE))
file.remove(mdl@work.folder)
library(pdphmc)
devtools::document()
setwd("~/Dropbox/work/PDP_HMC/package/pdphmc")
devtools::document()
setwd("~/Dropbox/work/PDP_HMC/package")
mdl <- pdphmc::build("test_case.cpp")
typeof(mdl)
mdl
className(mdl)
typeof(mdl)
is(mdl)
is(mdl)=="build-output"
is(1)
identical(is(mdl),"build-output")
identical(is(4),"build-output")
f <- run(mdl)
is(f)
?is
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
fit <- run(mdl)
histogram.plot(fit,"y")
getMonitor(fit)
getIntMonitor(fit)
trace.plot(fit,c("y","x(0)"))
trace.plot.int(fit,c("y","x(0)"))
trace.plot.int(fit,c("y_g","x_g(0)"))
trace.plot.int(fit,c("x_g(0)"))
trace.plot.int(fit,c("gx(0)"))
trace.plot.int(fit,c("gx(3)"))
acf.plot(fit,c("y","x(0)"))
acf.plot.int(fit,c("y","x(0)"))
acf.plot.int(fit,c("gx(3)"))
ff <- getSample(fit,c("gx(3)"))
ff
typeof(ff)
get_CPU_time(fi)
get_CPU_time(fit)
clean(mdl)
library(pdphmc)
?system
library(pdphmc)
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
?system
mdl <- pdphmc::build("test_case.cpp")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
mdl <- pdphmc::build("test_case.cpp")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
mdl <- pdphmc::build("test_case.cpp")
fit <-run(mdl)
clean(mdl)
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp")
mdl <- pdphmc::build("test_case.cpp")
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
check_cmdstan_toolchain()
library(cmdstanr)
install_cmdstan()
library(pdphmc)
setwd("~/Dropbox/work/PDP_HMC/package")
mdl <- pdphmc::build("test_case.cpp")
fit <- run(mdl)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI")
fit <- run(mdl)
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI")
fit <- run(mdl)
trace.plot(fit,"y")
?switch
for(i in c(-1:3, 9))  print(switch(i, 1, 2 , 3, 4))
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI")
fit <- run(mdl)
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI")
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI")
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI")
library(pdphmc)
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI")
fit <- run(mdl)
getMonitor(fit)
fit <- run(mdl,target.copies=2)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI",target.copies = 2)
fit <- run(mdl)
getMonitor(fit)
getIntMonitor(fit)
fit <- run(mdl,init=list(y=10))
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI",target.copies = 2,include.flags = "-D __DEBUG__")
fit <- run(mdl,init=list(y=10))
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI",target.copies = 2,include.flags = "-D __DEBUG__")
fit <- run(mdl,init=list(y=10))
fit <- run(mdl,init=list(y=10),pars=c(y,z))
fit <- run(mdl,init=list(y=10),pars=c("y","z"))
fit <- run(mdl,init=list(y=10),pars=c("y","z"),fixedMiDiag = list(x=c(1,2,3,4)))
getMonitor(fit)
getIntMonitor(fit)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI",target.copies = 2)
library(pdphmc)
mdl <- pdphmc::build("test_case.cpp",massMatrix = "diagMassVARI",target.copies = 2)
7*400 + 6*200
96.5/93
126.5/122.5
127/122.5
99.6*1.035
126.5*1.035
126.5*1.035^2
setwd("~/Dropbox/work/sta600_vaar21/Rscripts")
setwd("~/Dropbox/work/sta600_vaar21/Rscripts")
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
L
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
L
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
L
Sigma
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
Sigma
L
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
par(mfrow=c(1,1))
hist(xsq,probability = TRUE)
par(mfrow=c(1,1))
hist(y,probability = TRUE)
lines(grd,dnorm(grd,Ey,sd=sqrt(Vy)),col="red")
# linear combination 2*x_1 - 3*x_2 + 1
A <- matrix(c(2,-3),1,2)
b <- 1
Ey <- b + A%*%mu
Vy <- A%*%Sigma%*%t(A)
par(mfrow=c(1,1))
hist(y,probability = TRUE)
lines(grd,dnorm(grd,Ey,sd=sqrt(Vy)),col="red")
source('~/Dropbox/work/sta600_vaar21/Rscripts/mvn.R')
# linear combination 2*x_1 - 3*x_2 + 1
A <- matrix(c(2,-3),1,2)
b <- 1
Ey <- b + A%*%mu
Vy <- A%*%Sigma%*%t(A)
par(mfrow=c(1,1))
hist(y,probability = TRUE)
lines(grd,dnorm(grd,Ey,sd=sqrt(Vy)),col="red")
grd <- seq(from=-10,to=10,length.out = 100000)
# linear combination 2*x_1 - 3*x_2 + 1
A <- matrix(c(2,-3),1,2)
b <- 1
Ey <- b + A%*%mu
Vy <- A%*%Sigma%*%t(A)
par(mfrow=c(1,1))
hist(y,probability = TRUE)
lines(grd,dnorm(grd,Ey,sd=sqrt(Vy)),col="red")
# X^2
grd <- seq(from=0,to=100,length.out = 100000)
par(mfrow=c(1,1))
hist(xsq,probability = TRUE)
grd <- seq(from=0,to=100,length.out = 100000)
lines(grd,dchisq(grd,df=2))
# X^2
grd <- seq(from=0,to=100,length.out = 100000)
par(mfrow=c(1,1))
hist(xsq,probability = TRUE)
grd <- seq(from=0,to=100,length.out = 100000)
lines(grd,dchisq(grd,df=2),col="red")
rm(list=ls())
# illustration of the multivariate normal distribution
# and related distribution
Sigma <- matrix(c(2,1.2,1.2,1),2,2) # covariance matrix
Sigma <- matrix(c(2,1.2,1.2,1),2,2) # covariance matrix
P <- solve(Sigma) # inverse covariance
mu <- c(1,2) # mean vector
L <- t(chol(Sigma)) #Lower cholesky factor
Sigma
L
L%*%t(L)
# storage
nsim <- 10000 #number of simulations
x <- matrix(0.0,nsim,2) # storage
xsq <- numeric(nsim)
y <- numeric(nsim)
# simulation
for(i in 1:nsim){
x[i,] <- mu + L%*%rnorm(2) #mvn
dev <- x[i,] - mu
xsq[i] <- t(dev)%*%P%*%dev #X^2
y[i] <- 2*x[i,1]-3*x[i,2]+1 # some affine transformation
}
x
# scatter plot, and look at marginals
grd <- seq(from=-10,to=10,length.out = 100000)
par(mfrow=c(3,1))
plot(x[,1],x[,2],cex=0.5)
hist(x[,1],probability = TRUE)
lines(grd,dnorm(grd,mu[1],sd=sqrt(Sigma[1,1])),col="red")
hist(x[,2],probability = TRUE)
lines(grd,dnorm(grd,mu[2],sd=sqrt(Sigma[2,2])),col="red")
# linear combination 2*x_1 - 3*x_2 + 1
A <- matrix(c(2,-3),1,2)
b <- 1
Ey <- b + A%*%mu
Vy <- A%*%Sigma%*%t(A)
A
Ey
Vy
par(mfrow=c(1,1))
hist(y,probability = TRUE)
lines(grd,dnorm(grd,Ey,sd=sqrt(Vy)),col="red")
# X^2
grd <- seq(from=0,to=100,length.out = 100000)
par(mfrow=c(1,1))
hist(xsq,probability = TRUE)
grd <- seq(from=0,to=100,length.out = 100000)
lines(grd,dchisq(grd,df=2),col="red")
dev.off()
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
dev.off()
# mle and score for exponential distribution with rate
# parameter lambda
mle <- function(y){length(y)/sum(y)}
score <- function(lambda,y){length(y)/lambda-sum(y)}
# fundamental parameter
n <- 10 # size of data sets
nsim <- 10000 # number of simulated data sets
lambda <- 1.0 # true parameter
fisherInfo <- n/(lambda^2) # Fisher information
mles <- numeric(nsim)
scores <- numeric(nsim)
fisherInfo
for(i in 1:nsim){
y <- rexp(n=n,rate=lambda) # simulate data set
mles[i] <- mle(y)-lambda # MLE minus true parameter
scores[i] <- score(lambda,y) # score at true parameter
}
mles
scores
# histogram of scores (evalutated at true par) and associated
# asymptotic Normal result (N(0,Fisher info))
par(mfrow=c(2,1))
hist(scores,probability = TRUE,breaks=30)
grd <- seq(from=min(scores),to=max(scores),length.out = 100000)
lines(grd,dnorm(grd,mean=0,sd=sqrt(fisherInfo)),col="red")
mean(scores)
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
mean(scores)
source('~/Dropbox/work/sta600_vaar21/Rscripts/exp_mle.R')
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
Sys.which("make")
install.packages("jsonlite", type="source")
install.packages("rstan")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars.win")
if (!file.exists(M)) file.create(M)
cat("\n CXX14FLAGS += -mtune=native -O3 -mmmx -msse -msse2 -msse3 -mssse3 -msse4.1 -msse4.2",
file = M, sep = "\n", append = FALSE)
